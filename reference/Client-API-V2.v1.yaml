openapi: 3.0.0
info:
  title: Client API
  version: '2.0'
  contact:
    name: Hidde Stokvis
    url: 'https://trunkrs.nl'
    email: tech.support@trunkrs.nl
  description: Customer facing API version 2
servers:
  - url: 'https://api.trunkrs.nl/api/v2'
    description: production
  - url: 'https://staging-api.trunkrs.nl/api/v2'
    description: staging
paths:
  /shipments:
    get:
      summary: List shipments
      tags:
        - shipment
      operationId: get-shipment
      description: List all your shipments
      parameters:
        - schema:
            type: number
            default: 0
            minimum: 0
          in: query
          name: 'page[offset]'
          description: A number of shipments to offset when fetching
        - schema:
            type: number
            default: 0
            minimum: 0
            maximum: 100
          in: query
          name: 'page[limit]'
          description: Limit the results to this number
        - schema:
            type: string
            example: 'recipient,-trunkrs_nr'
            default: '-trunkrs_nr'
            pattern: '([a-zA-Z_-]+),?'
          in: query
          name: sort
          description: comma seperated list to sort fields by (prepend with - for decending)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Shipment'
                required:
                  - links
                  - data
    parameters: []
    post:
      summary: Create shipment
      operationId: post-shipments
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  data:
                    $ref: '#/components/schemas/Shipment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNSERVICABLE_AREA
                      - INVALID_ADDRESS
                      - INCOMPLETE
                      - DUPLICATE_ORDER_REFERENCE
                      - INVALID_TIME_SLOT
                  reason:
                    type: string
                required:
                  - code
                  - reason
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderReference:
                  type: string
                  description: 'Internal order reference provided by customer, this must be unique'
                sender:
                  $ref: '#/components/schemas/Location'
                recipient:
                  $ref: '#/components/schemas/Location'
                parcel:
                  type: array
                  items:
                    $ref: '#/components/schemas/Parcel'
                timeSlotId:
                  type: number
                  description: 'If no time slot id provided, we will find the first open time slot'
                featureCodes:
                  $ref: '#/components/schemas/Features'
                service:
                  type: string
                  enum:
                    - SAME_DAY
                    - SAME_DAY_FOOD
                    - SAME_DAY_FROZEN_FOOD
                  default: SAME_DAY
              required:
                - recipient
                - parcel
        description: |-
          The order reference needs to be a completely unique number. We recommend pre-pending it with your company name or a shortcut of your company name. Alternatively it can be used as a barcode for custom labels.

          The sender object lets you define a sender within your organization (for instance multi store retail company). If no sender is specified we will use your global account details to populate the fields.

          Every shipment must contain at least 1 parcel, for a multi colli shipment you can provide multiple parcels here.

          You can only provide the time slot id of an open time slot, when a time slot is already closed the request will fail. If no time slot id is provided we will find the first open time slot available.

          Features allow you to customize the shipping experience. Please note that some features might add additional costs to the shipment. Please contact sales for more details: sales@trunkrs.nl
      description: create a new shipment
      tags:
        - shipment
  '/shipments/{trunkrsNr}':
    get:
      summary: Get a specific shipment
      tags:
        - shipment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  data:
                    $ref: '#/components/schemas/Shipment'
                required:
                  - links
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - SHIPMENT_NOT_FOUND
                  reason:
                    type: string
                required:
                  - code
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - TOO_MANY_REQUESTS
                  reason:
                    type: string
                required:
                  - code
                  - reason
      operationId: 'get-shipments-:trunkrsNr'
      description: |-
        Get the information for a specific shipment, selected by Trunkrs Number.

        **This endpoint is rate limited to 10 requests per second.**
      parameters: []
    parameters:
      - schema:
          type: string
        name: trunkrsNr
        in: path
        required: true
    delete:
      summary: Cancel shipment
      operationId: delete-shipments-trunkrsNr
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNABLE_TO_CANCEL
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - SHIPMENT_NOT_FOUND
                  reason:
                    type: string
                required:
                  - code
                  - reason
      tags:
        - shipment
      description: Cancel a specific shipment by Trunkrs Nr.
  '/shipments/{trunkrsNr}/state':
    parameters:
      - schema:
          type: string
        name: trunkrsNr
        in: path
        required: true
    get:
      summary: Get state for specific shipment
      tags:
        - shipment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  data:
                    type: object
                    properties:
                      trunkrsNr:
                        type: string
                      state:
                        $ref: '#/components/schemas/State'
                    required:
                      - trunkrsNr
                      - state
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - SHIPMENT_NOT_FOUND
                  reason:
                    type: string
                required:
                  - code
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - TOO_MANY_REQUESTS
                  reason:
                    type: string
                required:
                  - code
                  - reason
      operationId: get-shipments-trunkrsNr-state
      description: |-
        Get the state for a specific shipment

        **this endpoint is rate limited to 10 requests per second**
  /timeslots/:
    get:
      summary: List time slots
      tags:
        - time slot
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TimeSlot'
                required:
                  - links
                  - data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
          headers: {}
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - TOO_MANY_REQUESTS
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '':
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TimeSlot'
      operationId: get-timeslots
      description: |-
        List all available time slots for your account

        **this endpoint is rate limited to 10 requests per second**
      parameters:
        - schema:
            type: string
            enum:
              - NL
              - BE
          in: query
          name: country
          required: true
          description: The destination country
        - schema:
            type: string
            pattern: '^\d{4}[A-Z]{2}'
          in: query
          name: postalCode
          description: Destination postal code
          required: true
    parameters: []
  /serviceable-areas:
    parameters: []
    get:
      summary: Check if a area is serviceable
      operationId: get-serviceable-areas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  area:
                    $ref: '#/components/schemas/Area'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNSERVICEABLE_AREA
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
      description: ''
      tags:
        - service
      parameters:
        - schema:
            type: string
            enum:
              - NL
              - BE
          in: query
          name: country
          required: true
        - schema:
            type: string
            pattern: '\d{4}([A-Z]{2})?'
          in: query
          name: postalCode
          required: true
  /webhooks:
    get:
      summary: List webhooks
      tags:
        - webhook
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Webhook'
                required:
                  - links
                  - data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
      operationId: get-webhooks
      description: Header tokens will be masked.
    post:
      summary: Create webhook subscription
      operationId: post-webhooks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  data:
                    $ref: '#/components/schemas/Webhook'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - VALIDATION_ERROR
                  reason:
                    type: string
                required:
                  - code
                  - reason
      tags:
        - webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                header:
                  type: object
                  properties:
                    key:
                      type: string
                      default: x-api-key
                    token:
                      type: string
                event:
                  type: string
                  enum:
                    - onStateUpdate
                    - onCreation
                    - onCancellation
                    - onReview
              required:
                - url
                - event
      description: 'If no header token is provided, we will create a random token for you. Please write it down as this is the only time we will show the token unmasked.'
  '/webhooks/{webhookId}':
    parameters:
      - schema:
          type: number
        name: webhookId
        in: path
        required: true
    get:
      summary: Get a specific webhook
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  data:
                    $ref: '#/components/schemas/Webhook'
                required:
                  - links
                  - data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - NOT_FOUND
                  reason:
                    type: string
                required:
                  - code
                  - reason
      operationId: get-webhooks-webhookId
      description: Header tokens will be masked
      tags:
        - webhook
    delete:
      summary: Unsubscribe from webhook
      operationId: delete-webhooks-webhookId
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - NOT_FOUND
                  reason:
                    type: string
                required:
                  - code
                  - reason
      tags:
        - webhook
  '/webhooks/{webhookId}/test':
    parameters:
      - schema:
          type: string
        name: webhookId
        in: path
        required: true
    post:
      summary: Fire test webhook
      operationId: post-webhooks-webhookId-test
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHORIZED
                  reason:
                    type: string
                required:
                  - code
                  - reason
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - NOT_FOUND
                  reason:
                    type: string
                required:
                  - code
                  - reason
      description: Fire's dummy data to the subscribed url
      tags:
        - webhook
components:
  schemas:
    Links:
      title: Links
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        next:
          $ref: '#/components/schemas/Link'
        prev:
          $ref: '#/components/schemas/Link'
      required:
        - self
    Link:
      title: Link
      description: ''
      oneOf:
        - type: object
          properties:
            href:
              type: string
            meta:
              type: object
        - type: string
    Shipment:
      title: Shipment
      type: object
      properties:
        trunkrsNr:
          type: number
          description: The Trunkrs Number is the main identifier for a shipment
        orderReference:
          type: string
          description: The internal order reference provided by you
        label:
          $ref: '#/components/schemas/Label'
        sender:
          $ref: '#/components/schemas/Location'
        recipient:
          $ref: '#/components/schemas/Location'
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/Parcel'
        timeSlot:
          $ref: '#/components/schemas/TimeSlot'
        state:
          $ref: '#/components/schemas/State'
        featureCodes:
          $ref: '#/components/schemas/Features'
        service:
          type: string
          enum:
            - SAME_DAY
            - SAME_DAY_FOOD
            - SAME_DAY_FROZEN_FOOD
          default: SAME_DAY
      required:
        - trunkrsNr
        - orderReference
        - label
        - sender
        - recipient
        - parcels
        - timeSlot
        - state
        - featureCodes
        - service
    Label:
      title: Label
      type: object
      properties:
        pdf:
          type: string
          description: Link to the PDF. Size is 6" x 4"
        zpl:
          type: string
          description: Label in Zebra format. Size is 6" x 4" at 203DPI
      required:
        - pdf
        - zpl
      description: ''
    Location:
      title: Location
      type: object
      properties:
        name:
          type: string
        companyName:
          type: string
        emailAddress:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
          enum:
            - NL
            - BE
        additionalRemarks:
          type: string
      required:
        - name
        - emailAddress
        - address
        - postalCode
        - city
        - country
    Parcel:
      title: Parcel
      type: object
      properties:
        description:
          type: string
        contents:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        weight:
          type: number
          description: Weight is provided in KG
        size:
          $ref: '#/components/schemas/Size'
        reference:
          type: string
          description: Your internal reference
      required:
        - weight
    Size:
      title: Size
      type: object
      properties:
        width:
          type: number
          description: Width is provided in centimeters
        height:
          type: number
          description: Height is provided in centimeters
        depth:
          type: number
          description: Depth is provided in centimeters
    Product:
      title: Product
      type: object
      description: ''
      properties:
        name:
          type: string
        reference:
          type: string
          description: your internal reference
        additionalRemarks:
          type: string
      required:
        - name
        - reference
    TimeSlot:
      title: TimeSlot
      type: object
      properties:
        id:
          type: number
        merchant:
          $ref: '#/components/schemas/Location'
        cutOffTime:
          type: string
          format: date-time
        collectionWindow:
          $ref: '#/components/schemas/TimeWindow'
        deliveryWindow:
          $ref: '#/components/schemas/TimeWindow'
        serviceArea:
          $ref: '#/components/schemas/Area'
      required:
        - id
        - merchant
        - cutOffTime
        - collectionWindow
        - deliveryWindow
        - serviceArea
    TimeWindow:
      title: TimeWindow
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      required:
        - start
        - end
    State:
      title: State
      type: object
      properties:
        code:
          type: string
          enum:
            - DATA_RECEIVED
            - DATA_PROCESSED
            - SHIPMENT_SORTED
            - SHIPMENT_SORTED_AT_SUB_DEPOT
            - SHIPMENT_ACCEPTED_BY_DRIVER
            - SHIPMENT_DELIVERED
            - SHIPMENT_DELIVERED_TO_NEIGHBOR
            - SHIPMENT_NOT_DELIVERED
            - EXCEPTION_SHIPMENT_NOT_ARRIVED
            - EXCEPTION_SHIPMENT_MISS_SORTED
            - EXCEPTION_SHIPMENT_DECLINED_BY_DRIVER
            - EXCEPTION_SHIPMENT_MISSING
            - EXCEPTION_SHIPMENT_LOST
            - EXCEPTION_SHIPMENT_CANCELLED_BY_SENDER
            - EXCEPTION_SHIPMENT_CANCELLED_BY_TRUNKRS
        reasonCode:
          type: string
          enum:
            - ADDRESS_NOT_FOUND
            - BUSINESS_CLOSED
            - RECIPIENT_NOT_AT_HOME
            - NO_TIME_LEFT_IN_TIMESLOT
            - REFUSED_BY_CUSTOMER
            - DELIVERY_DAMAGED
            - DRIVER_INVOLVED_IN_ACCIDENT
            - BAD_ADDRESS
            - EXTREME_WEATHER_CONDITIONS
            - PARCEL_MISSING
            - DELIVER_ADDRESS_NOT_ACCESSIBLE
        timestamp:
          type: string
          format: date-time
        currentOwner:
          type: object
          properties:
            type:
              type: string
              enum:
                - TRUNKRS
                - DRIVER
                - CUSTOMER
                - MERCHANT
            name:
              type: string
            address:
              type: string
            city:
              type: string
            country:
              type: string
              enum:
                - NL
                - BE
          required:
            - type
            - name
      required:
        - code
        - timestamp
    Features:
      title: Features
      type: object
      properties:
        noNeighbourDelivery:
          type: boolean
          description: Dont deliver at neighbours (extra costs are involved)
        noSignature:
          type: boolean
        deliverInMailBox:
          type: boolean
        maxAttempts:
          type: number
          default: 3
          maximum: 3
          description: Max number of delivery attempts (may not exceed 3)
        maxTimeOutsideFreezer:
          type: number
          minimum: 10
          maximum: 30
          default: 15
          description: Max cummalative time (in hours) the shipment can be outside of the freezer before it needs to be returned
    Webhook:
      title: Webhook
      type: object
      properties:
        url:
          type: string
        header:
          type: object
          required:
            - key
            - token
          properties:
            key:
              type: string
              default: x-api-key
            token:
              type: string
        event:
          type: string
          enum:
            - onStateUpdate
            - onCreation
            - onCancellation
            - onReview
        id:
          type: number
      required:
        - url
        - header
        - event
        - id
    Area:
      title: Area
      type: object
      properties:
        country:
          type: string
          enum:
            - NL
            - BE
        region:
          type: array
          description: Usualy an array of 3 digit postal codes
          items:
            type: string
      required:
        - country
  securitySchemes:
    x-api-clientsecret:
      name: Client Secret
      type: apiKey
      in: header
security:
  - x-api-clientsecret: []
